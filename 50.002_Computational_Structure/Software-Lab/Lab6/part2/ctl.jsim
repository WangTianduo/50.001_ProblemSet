.subckt ctl 
+ reset z 
+ id[31:26] 
+ ra2sel 
+ bsel 
+ alufn[5:0] 
+ wdsel[1:0] 
+ werf 
+ moe 
+ wr 
+ pcsel[2:0]
+ asel 
+ wasel

Xctl vdd 0 0 id[31:26] // one read port
+ tpcsel[2:0] wasel asel ra2sel bsel alufn[5:0] wdsel[1:0] werf moe xwr
+ $memory width=18 nlocations=64 contents=(
+ 0b011100000000000100 //  0b000000 = 1 Unused
+ 0b011100000000000100 //  0b000001 = 2 Unused
+ 0b011100000000000100 //  0b000010 = 3 Unused
+ 0b011100000000000100 //  0b000011 = 4 Unused
+ 0b011100000000000100 //  0b000100 = 5 Unused
+ 0b011100000000000100 //  0b000101 = 6 Unused
+ 0b011100000000000100 //  0b000110 = 7 Unused
+ 0b011100000000000100 //  0b000111 = 8 Unused
+ 0b011100000000000100 //  0b001000 = 9 Unused
+ 0b011100000000000100 //  0b001001 = 10 Unused
+ 0b011100000000000100 //  0b001010 = 11 Unused
+ 0b011100000000000100 //  0b001011 = 12 Unused
+ 0b011100000000000100 //  0b001100 = 13 Unused
+ 0b011100000000000100 //  0b001101 = 14 Unused
+ 0b011100000000000100 //  0b001110 = 15 Unused
+ 0b011100000000000100 //  0b001111 = 16 Unused
+ 0b011100000000000100 //  0b010000 = 17 Unused
+ 0b011100000000000100 //  0b010001 = 18 Unused
+ 0b011100000000000100 //  0b010010 = 19 Unused
+ 0b011100000000000100 //  0b010011 = 20 Unused
+ 0b011100000000000100 //  0b010100 = 21 Unused
+ 0b011100000000000100 //  0b010101 = 22 Unused
+ 0b011100000000000100 //  0b010110 = 23 Unused
+ 0b011100000000000100 //  0b010111 = 24 Unused
+ 0b000000100000010110 //  0b011000 = 25 LD
+ 0b000001100000000001 //  0b011001 = 26 ST
+ 0b011100000000000100 //  0b011010 = 27 Unused
+ 0b010000000000000100 //  0b011011 = 28 JMP
+ 0b011100000000000100 //  0b011100 = 29 Unused
+ 0b000000000000000100 //  0b011101 = 30 BEQ
+ 0b000000000000000100 //  0b011110 = 31 BNE
+ 0b000010001101010110 //  0b011111 = 32 LDR
+ 0b000000000000001100 //  0b100000 = 33 ADD
+ 0b000000000000101100 //  0b100001 = 34 SUB
+ 0b011100000000000100 //  0b100010 = 35 Unused
+ 0b011100000000000100 //  0b100011 = 36 Unused
+ 0b000000011001101100 //  0b100100 = 37 CMPEQ
+ 0b000000011010101100 //  0b100101 = 38 CMPLT
+ 0b000000011011101100 //  0b100110 = 39 CMPLE
+ 0b011100000000000100 //  0b100111 = 40 Unused
+ 0b000000001100001100 //  0b101000 = 41 AND
+ 0b000000001111001100 //  0b101001 = 42 OR
+ 0b000000001011001100 //  0b101010 = 43 XOR
+ 0b011100000000000100 //  0b101011 = 44 Unused
+ 0b000000010000001100 //  0b101100 = 45 SHL
+ 0b000000010000101100 //  0b101101 = 46 SHR
+ 0b000000010001101100 //  0b101110 = 47 SRA
+ 0b011100000000000100 //  0b101111 = 48 Unused
+ 0b000000100000001100 //  0b110000 = 49 ADDC
+ 0b000000100000101100 //  0b110001 = 50 SUBC
+ 0b011100000000000100 //  0b110010 = 51 Unused
+ 0b011100000000000100 //  0b110011 = 52 Unused
+ 0b000000111001101100 //  0b110100 = 53 CMPEQC
+ 0b000000111010101100 //  0b110101 = 54 CMPLTC
+ 0b000000111011101100 //  0b110110 = 55 CMPLEC
+ 0b011100000000000100 //  0b110111 = 56 Unused
+ 0b000000101100001100 //  0b111000 = 57 ANDC
+ 0b000000101111001100 //  0b111001 = 58 ORC
+ 0b000000101011001100 //  0b111010 = 59 XORC
+ 0b011100000000000100 //  0b111011 = 60 Unused
+ 0b000000110000001100 //  0b111100 = 61 SHLC
+ 0b000000110000101100 //  0b111101 = 62 SHRC
+ 0b000000110001101100 //  0b111110 = 63 SRAC
+ 0b011100000000000100 //  0b111111 = 64 Unused
+ )

Xmux reset xwr 0 wr mux2

Xbr1 id[31:28] 0 vdd#3 BR[3:0] xnor2
Xcheck2 id[27:26] checkb xor2
Xbr2 BR[3:0] checkb  br and5
Xinv z zinv inverter_2
// BEQ: id[27] = 0; BNE: id[27] = 1
XmuxZ id[27] z zinv pcsel_branch mux2

XmuxBr br#3 tpcsel[2:0] 0 0 pcsel_branch pcsel[2:0] mux2

.ends