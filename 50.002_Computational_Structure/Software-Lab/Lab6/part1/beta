a.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/nominal.jsim"
.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/stdcell.jsim"
// lab6basicblock
.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/lab6basicblock.jsim"
// lab6pc - done
//.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/lab6pc.jsim"
// lab6regfile - done
//.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/lab6regfile.jsim"
// lab6ctl
//.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/courseware/lab6ctl.jsim"
//.include "/Users/wangtianduo/Desktop/Term4/Computer_Science/50.002_Computational_Structure/Software-Lab/Lab6/includeALU.jsim"
.include "/Users/wangtianduo/Desktop/lab6-betacpu/alu.jsim"

.subckt FAsub a b ci s co
XNand1 a b x xor2
Xnand2 a b y nand2
Xnand3 x ci z nand2
Xnand4 x ci s xor2
XXor1 y z co nand2
.ends

.subckt add4 IN[31:0] OUT[31:0]

Xadd1 IN2 vdd 0 OUT2 C0 FAsub
Xadd2 IN[31:3] 0#29 C[28:0] OUT[31:3] C[29:1] FAsub
.connect 0#2 OUT[1:0] 

.ends
// def-pc
.subckt pc clk reset ia[31:0]

Xreset reset#32 node2[31:0] 0#32 node1[31:0] mux2
Xid node1[31:0] clk#32 ia[31:0] dreg
Xic ia[31:0] node2[31:0] add4
.ends
//******************************************************

// def-regfile
.subckt regfile clk werf ra2sel ra[4:0] rb[4:0] rc[4:0]
+ wdata[31:0] radata[31:0] rbdata[31:0]

Xra2mux ra2sel#5 rb[4:0] rc[4:0] ra2mux[4:0] mux2

Xregfile 
+ vdd 0 0 ra[4:0] adata[31:0] // A read port
+ vdd 0 0 ra2mux[4:0] bdata[31:0] // B read port
+ 0 clk werf rc[4:0] wdata[31:0]      // write port
+ $memory width=32 nlocations=31

// RA
xdetect1 ra[4:0] outA and5

// RB or RC
xdetect2 ra2mux[4:0] outB and5

xtoradata outA#32 adata[31:0] 0#32 radata[31:0] mux2
xtorbdata outB#32 bdata[31:0] 0#32 rbdata[31:0] mux2

.ends

.subckt and5 a b c d e z
    xand4 a b c d z1 and4 
    xand2 z1 e z and2 

.ends

//******************************************************
// def-ctl
.subckt ctl reset id[31:26] ra2sel bsel alufn[5:0] wdsel[1:0] werf moe wr

Xctl vdd 0 0 id[31:26] // one read port
+ pcsel[2:0] wasel asel ra2sel bsel alufn[5:0] wdsel[1:0] werf moe xwr
+ $memory width=18 nlocations=64 contents=(
+ 0b011100000000000100 //  0b000000 = 1 Unused
+ 0b011100000000000100 //  0b000001 = 2 Unused
+ 0b011100000000000100 //  0b000010 = 3 Unused
+ 0b011100000000000100 //  0b000011 = 4 Unused
+ 0b011100000000000100 //  0b000100 = 5 Unused
+ 0b011100000000000100 //  0b000101 = 6 Unused
+ 0b011100000000000100 //  0b000110 = 7 Unused
+ 0b011100000000000100 //  0b000111 = 8 Unused
+ 0b011100000000000100 //  0b001000 = 9 Unused
+ 0b011100000000000100 //  0b001001 = 10 Unused
+ 0b011100000000000100 //  0b001010 = 11 Unused
+ 0b011100000000000100 //  0b001011 = 12 Unused
+ 0b011100000000000100 //  0b001100 = 13 Unused
+ 0b011100000000000100 //  0b001101 = 14 Unused
+ 0b011100000000000100 //  0b001110 = 15 Unused
+ 0b011100000000000100 //  0b001111 = 16 Unused
+ 0b011100000000000100 //  0b010000 = 17 Unused
+ 0b011100000000000100 //  0b010001 = 18 Unused
+ 0b011100000000000100 //  0b010010 = 19 Unused
+ 0b011100000000000100 //  0b010011 = 20 Unused
+ 0b011100000000000100 //  0b010100 = 21 Unused
+ 0b011100000000000100 //  0b010101 = 22 Unused
+ 0b011100000000000100 //  0b010110 = 23 Unused
+ 0b011100000000000100 //  0b010111 = 24 Unused
+ 0b000000100000010110 //  0b011000 = 25 LD
+ 0b000001100000001001 //  0b011001 = 26 ST
+ 0b011100000000000100 //  0b011010 = 27 Unused
+ 0b011100000000000100 //  0b011011 = 28 Unused
+ 0b011100000000000100 //  0b011100 = 29 Unused
+ 0b011100000000000100 //  0b011101 = 30 Unused
+ 0b011100000000000100 //  0b011110 = 31 Unused
+ 0b011100000000000100 //  0b011111 = 32 Unused
+ 0b000000000000001100 //  0b100000 = 33 ADD
+ 0b000000000000101100 //  0b100001 = 34 SUB
+ 0b011100000000000100 //  0b100010 = 35 Unused
+ 0b011100000000000100 //  0b100011 = 36 Unused
+ 0b000000011001101100 //  0b100100 = 37 CMPEQ
+ 0b000000011010101100 //  0b100101 = 38 CMPLT
+ 0b000000011011101100 //  0b100110 = 39 CMPLE
+ 0b011100000000000100 //  0b100111 = 40 Unused
+ 0b000000001100001100 //  0b101000 = 41 AND
+ 0b000000001111001100 //  0b101001 = 42 OR
+ 0b000000001011001100 //  0b101010 = 43 XOR
+ 0b011100000000000100 //  0b101011 = 44 Unused
+ 0b000000010000001100 //  0b101100 = 45 SHL
+ 0b000000010000101100 //  0b101101 = 46 SHR
+ 0b000000010001101100 //  0b101110 = 47 SRA
+ 0b011100000000000100 //  0b101111 = 48 Unused
+ 0b000000100000001100 //  0b110000 = 49 ADDC
+ 0b000000100000101100 //  0b110001 = 50 SUBC
+ 0b011100000000000100 //  0b110010 = 51 Unused
+ 0b011100000000000100 //  0b110011 = 52 Unused
+ 0b000000111001101100 //  0b110100 = 53 CMPEQC
+ 0b000000111010101100 //  0b110101 = 54 CMPLTC
+ 0b000000111011101100 //  0b110110 = 55 CMPLEC
+ 0b011100000000000100 //  0b110111 = 56 Unused
+ 0b000000101100001100 //  0b111000 = 57 ANDC
+ 0b000000101111001100 //  0b111001 = 58 ORC
+ 0b000000101011001100 //  0b111010 = 59 XORC
+ 0b011100000000000100 //  0b111011 = 60 Unused
+ 0b000000110000001100 //  0b111100 = 61 SHLC
+ 0b000000110000101100 //  0b111101 = 62 SHRC
+ 0b000000110001101100 //  0b111110 = 63 SRAC
+ 0b011100000000000100 //  0b111111 = 64 Unused

+ )

Xreset reset xwr 0 wr mux2

.ends

// def-beta
.subckt beta clk reset 
+ ia[31:0] id[31:0] ma[31:0]
+ moe mrd[31:0] wr mwd[31:0]

xconnectcirc1 id[15]#16 id[15:0] sext_c[31:0] buffer

Xpc 
+clk 
+reset 
+ia[31:0] 
+pc


Xctl reset 
+ id[31:26] 
+ ra2sel 
+ bsel 
+ alufn[5:0] 
+ wdsel[1:0] 
+ werf 
+ moe 
+ wr 
+ ctl

Xregfile clk werf ra2sel 
+ id[20:16] id[15:11] id[25:21]
+ wdata[31:0] 
+ radata[31:0] 
+ mwd[31:0] 
+ regfile

//Xbsel bsel#32 mwd[31:0] id15#16 id[15:0] aluBinput[31:0] mux2 // is also OK
Xbsel bsel#32 mwd[31:0] sext_c[31:0] aluBinput[31:0] mux2

Xalu alufn[5:0] radata[31:0] aluBinput[31:0] ma[31:0] z3 v3 n3 alu

Xwdsel 
+ wdsel[0]#32 
+ wdsel[1]#32 
+ 0#32 
+ ma[31:0] 
+ mrd[31:0] 
+ 0#32 
+ wdata[31:0] 
+ mux4


.ends